<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>（基于Java）编写编译器和解释器-第一章-第一部分：介绍</title>
      <link href="/2018/07/18/%E7%BC%96%E8%AF%91%E5%99%A8%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2018/07/18/%E7%BC%96%E8%AF%91%E5%99%A8%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      <content type="html"><![CDATA[<blockquote><p>本章描述了本书的目标和用到的方法并鸟瞰编译器和解释器的全貌。</p></blockquote><h2 id="目标和方法"><a href="#目标和方法" class="headerlink" title="目标和方法"></a>目标和方法</h2><p>本书讲授编译器和解释器的基本写法，目标是呈现给你怎样设计和开发它们：</p><ul><li>用Java写的编译器，编译Pascal(一个高级的面向过程的编程语言)的一个主要子集。<code>(即包含主要的语言特征，但去掉一些为写编译器方便而去掉的无关大雅的特性。)</code></li><li>用Java写的解释器且包含一个交互式的符号调试器<code>(符号调试器即基于符号表，而不是基于机器的指令集、硬件的调试功能)</code>，解释同样的Pascal语言子集。</li><li>带图形用户界面的集成开发环境(IDE)。这个IDE是你看到的功能全面的开源的Eclipse或者Borland的JBuilder等IDE的一个简化版。不过，它也包含一个源程序编辑器和一个交互界面用来设置断点，单步调试，查看和修改变量值等等其它。</li></ul><p>达成这些个极具野心的目标是个大挑战。好的技能将会帮你如何如把程序编译成为机器语言或解释执行程序。现代软件工程法则和优秀的面向对象设计思想将会给你呈现怎么通过代码实现一个编译器或解释器而最终所有组件能良好协作。编译器和解释器程序大且复杂。开发个小程序仅需要某种技能即可，然NB的程序如编译器或解释器还需要软件工程法则和面向对象设计。因此本书强调必备技能，软件工程法则和面向对象思想。</p><h2 id="什么是编译器和解释器"><a href="#什么是编译器和解释器" class="headerlink" title="什么是编译器和解释器"></a>什么是编译器和解释器</h2><p>编译器和解释器的主要目的是“翻译”由高阶(High-Level)源语言写的源程序。把源程序翻译成什么样是接下几个段落的主题。</p><p>本书中源语言为Pascal的一个大子集，换句话说，你能够编译或解释正规的Pascal程序。因为编译器和解释器是用Java写的，实现语言是Java。</p><p>Pascal编译器将Pascal源程序翻译成为低阶(Low-Level)的某具体机器的机器语言<code>（更准确的讲是CPU的机器语言)</code>。通常源程序是文本格式。如果编译器工作正常，对应的机器语言和最初的Pascal源程序殊路同归<code>（一样的行为，只不过呈现方式不一样。比如你用钥匙而偷车的直接电线打火发动汽车一样）</code>。机器语言是目标语言，编译器生成用机器语言组成目标代码。代码生成之后，编译器任务就算完成。目标代码一般写到文件里<code>（一般是二进制文件）</code>。</p><p>一个程序可包含数个源文件，而编译器为每个文件生成一个目标文件。一个名叫“链接器”(linker)的辅助程序将这些目标文件的内容连同运行时库程序合成到一个计算机能够加载和执行的目标程序<code>(如windows的PE程序)</code>中。库程序一般来自于预先编译好的目标文件。</p><p>因为机器语言不好记，编译器可生成汇编语言作为目标语言，汇编语言离机器语言只有一步之遥。通常每个汇编指令都有机器语言的指令与之对应。如果你掌握了短助记名<code>（比如ADD和MOV等）</code>汇编语言好记多了。汇编器<code>（另一个编译器）</code>将汇编语言翻译成为机器语言。</p><p>下图概括了将一个或多个源程序编译成为目标程序的过程。</p><p><img src="/2018/07/18/编译器第一章/1-1.png" alt="图1"></p><p>上图展示了将一个包含三个源文件sort1.pas、sort2.pas、sort3.pas的Pascal程序翻译成为三个相应机器语言目标文件sort1.obj、sort2.obj、sort3.obj。链接器将三个目标文件<code>（连带相关运行时库)</code> 合成为一个可执行的目标程序sort.exe。图右边展示了编译器将Pascal源文件翻译为汇编语言目标文件sort1.asm、sort2.asm、sort3.asm，接着汇编器将其转化为机器语言目标文件。最后链接器产生目标程序sort.exe。</p><h4 id="那么编译器和解释器到底有和不同？"><a href="#那么编译器和解释器到底有和不同？" class="headerlink" title="那么编译器和解释器到底有和不同？"></a>那么编译器和解释器到底有和不同？</h4><p>解释器不生成任何目标程序，相反它读进源程序就会执行。这好比你被一个Pascal程序把住手，按照它说的某种语句读进顺序去做。你可以在一张草稿纸上记下程序的变量值直到程序结束才输出每条语句的输出结果。本质上你做的正是Pascal解释器干的事情。Pascal解释器读进程序，执行程序。没有任何目标程序需要生成和加载，相反，解释器将程序翻译成为一系列用来执行程序的动作(Action)。</p><h2 id="比较编译器和解释器"><a href="#比较编译器和解释器" class="headerlink" title="比较编译器和解释器"></a>比较编译器和解释器</h2><h4 id="该如何决策何时用编译器和何时用解释器？"><a href="#该如何决策何时用编译器和何时用解释器？" class="headerlink" title="该如何决策何时用编译器和何时用解释器？"></a>该如何决策何时用编译器和何时用解释器？</h4><p>当你把一个源程序交给解释器，解释器接管检查和执行。编译器也检查但生成目标代码。运行完编译器之后还有运行链接器产生目标程序，且还需加载目标程序到内存中去执行它。如果编译器生成汇编语言代码，你还得运行汇编器。所以很显然解释器需要更少步骤。<br>解释器比编译器更常见。你可用Java写个Pascal解释器运行在基于微软Windows的PC上，苹果的MAC或某个Linux主机上，解释器能够在前面提到的平台上执行Pascal程序。而编译器必须为某个具体的机器生成代码<code>（无论直接生成或间接通过汇编器生成)</code>。所以即使你要把原来为PC写的Pascal编译器放到MAC上运行，它生成的代码仍旧是PC的，如果想让它为MAC生成代码，你可能得重写编译器的某些部分。</p><blockquote><p>接下来讨论的编译器将问题的重心放在为Java虚拟机生成代码上，因为虚拟机能够运行在很多平台上。所以为具体机器生成代码先放一边，有兴趣可以将虚拟机替换成为真实PC机上生成x86指令看看。</p></blockquote><h4 id="如果源程序中包含逻辑错误，比如除值为0的变量，直到运行时才发现，那么会发生什么情况？"><a href="#如果源程序中包含逻辑错误，比如除值为0的变量，直到运行时才发现，那么会发生什么情况？" class="headerlink" title="如果源程序中包含逻辑错误，比如除值为0的变量，直到运行时才发现，那么会发生什么情况？"></a>如果源程序中包含逻辑错误，比如除值为0的变量，直到运行时才发现，那么会发生什么情况？</h4><p>因为解释器在执行程序过程中控制一切，它能停下来告诉你出问题的行数和变量名称。它甚至能提示你在继续执行程序之前可以做哪些正确操作比如修改变量值为非零。解释器可包含一个交互式的源级<code>(source-level)</code>调试器，俗称符号调试器<code>(symbolic debugger)</code>。符号调试器意味着你可用程序中的符号，比如变量名。<br>另一方面，由编译器和链接器产生的目标程序通常自我运行<code>（由机器执行，无需第三方）</code>。源程序有关行号和变量名等信息在目标程序中不可见。当运行时抛错，程序简单中断，还可能打印一条包含出问题指令地址的消息。于是找出源程序中相关语句变量除零的问题就交给你了。</p><p>所以通常就调试来说，解释器才是正道。有些编译器在目标代码中添加一些额外的信息，这样当错我发生时，目标程序能打印出相应的问题行数和变量名等。于是你改正错误，重新编译，然后重新运行。生成额外的信息会导致程序执行的比正常要慢<code>（这也是Visual C++为什么有Run/Debug编译模式）</code>。这提示你在认为程序到达最终“产品”版本后，应关掉调试特征重新编译。</p><p>假设你已经成功调试好程序，那重点将是怎样使运行更快。因为机器能够以最快速度执行原生机器语言程序，编译程序能够比解释器快好几个量级。显然就速来来说编译器是胜者，当优化版编译器知道怎么生成具体场景的优化代码的情况下尤其确定。所以是否使用编译器或解释器取决于程序的开发和执行谁更重要。理想情况是一个带符号源级调试器的解释器用在开发过程中，一个生成机器代码的编译器在程序调试OK之后以求更快的执行速度。这些就是本书的目标，因为它编译器，解释器都教。</p><h2 id="情景变得有点模糊"><a href="#情景变得有点模糊" class="headerlink" title="情景变得有点模糊"></a>情景变得有点模糊</h2><p>编译器和解释器的差异很容易说明清楚，但是随着虚拟机的快速流行，情景变得有点模糊。</p><p>虚拟机是一个用来模拟机器<code>（计算机）</code>的程序。此程序能够运行在不同的真实计算机平台上。举个例子，Java 虚拟机(JVM)能够运行在基于微软Windows的PC上，苹果的MAC，Linux系统和其它很多平台上。<code>（比如Sparc，IBM小型机等）</code>。</p><p>虚拟机有自己的虚拟机器语言，而虚拟语言指令被真实宿主机所解释。那么如果你写了一个翻译器将Pascal源程序翻译成为被宿主机解释的虚拟机语言，这个翻译器算编译器还是解释器？</p><p>不斤斤计较了，我们本书约定如果一个翻译器将源程序转化成为机器语言，不管是真实的机器语言还是虚拟机器语言，那么这个翻译器就是编译器。翻译器没有优先生成机器语言去执行程序的就算解释器。</p><blockquote><p>声明：本文转载自博客园Bang老师，为英版原书《Writing Compilers and Interpreters 3rd Edition》译文。转载只为学习。<a href="https://www.cnblogs.com/lifesting/archive/2012/07/11/2585860.html" target="_blank" rel="noopener">博客地址</a><br>至今与Bang老师联系不上，译文阅读量极低，故为扩大该译文的影响力，笔者擅自转载。由于Bang老师只译到第十一章，但最后的九个章节笔者会自己翻译。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 编译器和解释器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编译器 </tag>
            
            <tag> 解释器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>（基于Java）编写编译器和解释器：书的组织结构</title>
      <link href="/2018/07/09/%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%BB%84%E6%88%90/"/>
      <url>/2018/07/09/%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%BB%84%E6%88%90/</url>
      <content type="html"><![CDATA[<blockquote><p>该书共有19章，加上最后的名词索引表部分</p></blockquote><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><p>该章是一个总体介绍。<br><a id="more"></a></p><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><p>该章描述组织该编译器和解释器的总体框架。它用来设计和测试它的结构化建立端，以便于所有章节的代码都能成功地基于它建立起来。</p><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><h3 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h3><p>第三章和第四章来对付处理一些基础的翻译任务，即第三章来扫描源程序，第四章建立一个符号表。</p><blockquote><p>接下来的章节来建立工作的Pascal解释器。为使用逐渐增加的发展方法，本书采用个个章节进行多次迭代的语法分析和解释。</p></blockquote><h3 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h3><p>该章来语法分析表达式和赋值语句。</p><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><p>该章将第五章的部分进行解释。</p><h3 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h3><p>该章语法分析控制语句。</p><h3 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h3><p>该章来解释第七章的部分。</p><h3 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h3><p>该章来语法分析声明语句。</p><h3 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h3><p>该章来处理类型检查。</p><h3 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h3><p>该章来语法分析过程语句、方法部分和整个Pascal程序。</p><h3 id="第十二章"><a href="#第十二章" class="headerlink" title="第十二章"></a>第十二章</h3><p>该章完成解释器并执行整个Pascal程序。</p><blockquote><p>接下来的两章会基于工作的解释器来建立。当你是第一次读该书的话，你可以选择跳过接下来的两章节，但是一定要确定来回头好好看一下，毕竟它对你还是很有帮助的。</p></blockquote><h3 id="第十三章"><a href="#第十三章" class="headerlink" title="第十三章"></a>第十三章</h3><p>该章增加了一个交互式的源级别的debugger，通过它你可以通过在命令行敲打命令来跟它进行交流。</p><h3 id="第十四章"><a href="#第十四章" class="headerlink" title="第十四章"></a>第十四章</h3><p>该章为这个基于命令行的debugger包装了一个图形交互页面来建一个集成开发环境IDE。</p><blockquote><p>该书的最后部分通过重用早些章节的代码来形成这个编译器。</p></blockquote><h3 id="第十五章"><a href="#第十五章" class="headerlink" title="第十五章"></a>第十五章</h3><p>该章介绍了Java虚拟机（JVM）和Jasmin的构造结构，其中Jasmin是一个帮助java虚拟机生成汇编语言的工具。</p><h3 id="第十六章"><a href="#第十六章" class="headerlink" title="第十六章"></a>第十六章</h3><p>该章编译程序、赋值语句和表达式。（迭代早些章节的实现）</p><h3 id="第十七章"><a href="#第十七章" class="headerlink" title="第十七章"></a>第十七章</h3><p>该章编译过程部分、方法部分回调，和string的操作。</p><h3 id="第十八章"><a href="#第十八章" class="headerlink" title="第十八章"></a>第十八章</h3><p>该章通过编译控制语句、arrays和记录来完成这个编译器。</p><h3 id="第十九章"><a href="#第十九章" class="headerlink" title="第十九章"></a>第十九章</h3><p>该最后一章是一个对许多对于编写编译器方面但没有在其他章节中提及到简短的介绍，例如代码优化和基于表格驱动的源码扫描器和语法分析器。</p>]]></content>
      
      <categories>
          
          <category> 编译器和解释器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编译器 </tag>
            
            <tag> 解释器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>（基于Java）编写编译器和解释器-第一章：介绍之前</title>
      <link href="/2018/07/09/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2018/07/09/%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h2 id="关于翻译《Writing-Compilers-and-Interpreters-3rd-Edition》书籍"><a href="#关于翻译《Writing-Compilers-and-Interpreters-3rd-Edition》书籍" class="headerlink" title="关于翻译《Writing Compilers and Interpreters 3rd Edition》书籍"></a>关于翻译《Writing Compilers and Interpreters 3rd Edition》书籍</h2><h3 id="翻译这本书的想法"><a href="#翻译这本书的想法" class="headerlink" title="翻译这本书的想法"></a>翻译这本书的想法</h3><blockquote><p>这学期在学完《编译原理》这门课程之后，我是深深地被编译器的实现迷住了。。。<br><a id="more"></a><br>本学期的《编译原理课程设计》中最后用C++实现了一个小编译器，但是其中很大部分是借用该书的讲解实现，而且是C++语言。在Google、百度之后，千挑万选发现了这本很有名的但是并不为多数人了解的书（大家都不是特别关心编译器的实现）。</p></blockquote><p>相对于号称编译原理界的“三大圣书”：龙书——《编译原理技术和工具》-作者:Alfred V.Aho,Ravi Sethi,Jeffrey D.Ullman 、虎书——《现代编译原理-C语言描述》-作者：Andrew W.Appel,with Jens Palsberg 、鲸书——《高级编译器设计与实现》-作者：Steven S.Muchnick<br>“三大圣书”详情请访问<a href="https://www.cnblogs.com/Amedeo/archive/2017/11/24/7881889.html" target="_blank" rel="noopener">参考链接</a></p><p>但是，这本书是基于java，而且有更加详实完善的代码讲解，该书作者也是大名鼎鼎的Ronald Mak,其前两版讲解编译器的是使用的C/C++，加上目前该书目前没有英文版，故此笔者决定擅自翻译该书。</p><blockquote><p>笔者英语水平目前较差，仅是英语六级水平，但是为了读者理解，并尽量保证翻译质量，笔者会用心做好的。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 编译器和解释器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编译器 </tag>
            
            <tag> 解释器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>全新博客界面</title>
      <link href="/2018/07/08/blogUItry/"/>
      <url>/2018/07/08/blogUItry/</url>
      <content type="html"><![CDATA[<h2 id="博客界面更新换代啦"><a href="#博客界面更新换代啦" class="headerlink" title="博客界面更新换代啦"></a>博客界面更新换代啦</h2><p><img src="/2018/07/08/blogUItry/星球.jpg" alt="ls"></p><blockquote><p>之前的那个界面是使用的jelly之中的一个界面，但是介于个人习惯，我今天还是决定换上大名鼎鼎的NexT，果然现在到底界面更加简洁清晰，加载博客速度也上来了。</p></blockquote><p>欢迎关注我的微信公众号：【星球码】，一起学习分享java、python、操作系统、编译器等知识。</p><p>作者：SupriseMF<br>日期：July,8th,2018</p>]]></content>
      
      <categories>
          
          <category> Hexo使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> world </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test2</title>
      <link href="/2018/07/06/test2/"/>
      <url>/2018/07/06/test2/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/06/test2/实现.png" alt="ls"></p>]]></content>
      
      
        <tags>
            
            <tag> test for picturres in static blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/2018/07/06/test/"/>
      <url>/2018/07/06/test/</url>
      <content type="html"><![CDATA[<!DOCTYPE html>  <html>    <head>      <title>test</title>      <meta charset="utf-8">      <meta name="viewport" content="width=device-width, initial-scale=1.0">            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0/katex.min.css">                                                                  <style>       /** * prism.js Github theme based on GitHub's theme. * @author Sam Clarke */code[class*="language-"],pre[class*="language-"] {  color: #333;  background: none;  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;  text-align: left;  white-space: pre;  word-spacing: normal;  word-break: normal;  word-wrap: normal;  line-height: 1.4;  -moz-tab-size: 8;  -o-tab-size: 8;  tab-size: 8;  -webkit-hyphens: none;  -moz-hyphens: none;  -ms-hyphens: none;  hyphens: none;}/* Code blocks */pre[class*="language-"] {  padding: .8em;  overflow: auto;  /* border: 1px solid #ddd; */  border-radius: 3px;  /* background: #fff; */  background: #f5f5f5;}/* Inline code */:not(pre) > code[class*="language-"] {  padding: .1em;  border-radius: .3em;  white-space: normal;  background: #f5f5f5;}.token.comment,.token.blockquote {  color: #969896;}.token.cdata {  color: #183691;}.token.doctype,.token.punctuation,.token.variable,.token.macro.property {  color: #333;}.token.operator,.token.important,.token.keyword,.token.rule,.token.builtin {  color: #a71d5d;}.token.string,.token.url,.token.regex,.token.attr-value {  color: #183691;}.token.property,.token.number,.token.boolean,.token.entity,.token.atrule,.token.constant,.token.symbol,.token.command,.token.code {  color: #0086b3;}.token.tag,.token.selector,.token.prolog {  color: #63a35c;}.token.function,.token.namespace,.token.pseudo-element,.token.class,.token.class-name,.token.pseudo-class,.token.id,.token.url-reference .token.variable,.token.attr-name {  color: #795da3;}.token.entity {  cursor: help;}.token.title,.token.title .token.punctuation {  font-weight: bold;  color: #1d3e81;}.token.list {  color: #ed6a43;}.token.inserted {  background-color: #eaffea;  color: #55a532;}.token.deleted {  background-color: #ffecec;  color: #bd2c00;}.token.bold {  font-weight: bold;}.token.italic {  font-style: italic;}/* JSON */.language-json .token.property {  color: #183691;}.language-markup .token.tag .token.punctuation {  color: #333;}/* CSS */code.language-css,.language-css .token.function {  color: #0086b3;}/* YAML */.language-yaml .token.atrule {  color: #63a35c;}code.language-yaml {  color: #183691;}/* Ruby */.language-ruby .token.function {  color: #333;}/* Markdown */.language-markdown .token.url {  color: #795da3;}/* Makefile */.language-makefile .token.symbol {  color: #795da3;}.language-makefile .token.variable {  color: #183691;}.language-makefile .token.builtin {  color: #0086b3;}/* Bash */.language-bash .token.keyword {  color: #0086b3;}html body{font-family:"Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:"\00a0"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}.markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for="preview"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for="preview"]) .code-chunk .status{display:none}.markdown-preview:not([for="preview"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px)}}@media screen and (max-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% -  300px);padding:2em calc(50% - 457px -  150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}/* Please visit the URL below for more information: *//*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */       </style>    </head>    <body for="html-export">      <div class="mume markdown-preview   ">      <h2 class="mume-header" id="eriaoti">eriaoti</h2><h3 class="mume-header" id="sanbait">sanbait</h3><blockquote><p>hahahah</p></blockquote><p><?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><!-- Generated by graphviz version 2.40.1 (20161225.0304) --><!-- Title: G Pages: 1 --><svg width="135pt" height="332pt" viewbox="0.00 0.00 134.94 332.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 328)"><title>G</title><polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-328 130.9362,-328 130.9362,4 -4,4"/><!-- 开始 --><g id="node1" class="node"><title>开始</title><ellipse fill="none" stroke="#000000" cx="54" cy="-306" rx="35.3587" ry="18"/><text text-anchor="middle" x="54" y="-301.8" font-family="Times,serif" font-size="14.00" fill="#000000">开始</text></g><!-- A --><g id="node2" class="node"><title>A</title><ellipse fill="none" stroke="#000000" cx="54" cy="-234" rx="27" ry="18"/><text text-anchor="middle" x="54" y="-229.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text></g><!-- 开始&#45;&gt;A --><g id="edge1" class="edge"><title>开始&#45;&gt;A</title><path fill="none" stroke="#000000" d="M54,-287.8314C54,-280.131 54,-270.9743 54,-262.4166"/><polygon fill="#000000" stroke="#000000" points="57.5001,-262.4132 54,-252.4133 50.5001,-262.4133 57.5001,-262.4132"/></g><!-- B --><g id="node3" class="node"><title>B</title><ellipse fill="none" stroke="#000000" cx="82" cy="-162" rx="27" ry="18"/><text text-anchor="middle" x="82" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">B</text></g><!-- A&#45;&gt;B --><g id="edge2" class="edge"><title>A&#45;&gt;B</title><path fill="none" stroke="#000000" d="M60.778,-216.5708C63.9872,-208.3187 67.8935,-198.2738 71.4758,-189.0623"/><polygon fill="#000000" stroke="#000000" points="74.8248,-190.1069 75.1874,-179.5182 68.3008,-187.5697 74.8248,-190.1069"/></g><!-- D --><g id="node4" class="node"><title>D</title><ellipse fill="none" stroke="#000000" cx="27" cy="-90" rx="27" ry="18"/><text text-anchor="middle" x="27" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">D</text></g><!-- B&#45;&gt;D --><g id="edge3" class="edge"><title>B&#45;&gt;D</title><path fill="none" stroke="#000000" d="M69.5196,-145.6621C62.4876,-136.4564 53.5653,-124.7764 45.7117,-114.4953"/><polygon fill="#000000" stroke="#000000" points="48.2828,-112.0953 39.431,-106.2733 42.72,-116.3446 48.2828,-112.0953"/></g><!-- C --><g id="node5" class="node"><title>C</title><ellipse fill="none" stroke="#000000" cx="99" cy="-90" rx="27" ry="18"/><text text-anchor="middle" x="99" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text></g><!-- B&#45;&gt;C --><g id="edge5" class="edge"><title>B&#45;&gt;C</title><path fill="none" stroke="#000000" d="M86.2022,-144.2022C88.0821,-136.2406 90.3425,-126.6671 92.4371,-117.7957"/><polygon fill="#000000" stroke="#000000" points="95.8955,-118.3792 94.7872,-107.8425 89.0828,-116.7706 95.8955,-118.3792"/></g><!-- D&#45;&gt;A --><g id="edge4" class="edge"><title>D&#45;&gt;A</title><path fill="none" stroke="#000000" d="M30.4074,-108.1727C35.0381,-132.8697 43.3612,-177.2595 48.7816,-206.1684"/><polygon fill="#000000" stroke="#000000" points="45.352,-206.8698 50.635,-216.0535 52.2321,-205.5797 45.352,-206.8698"/></g><!-- 结束 --><g id="node6" class="node"><title>结束</title><ellipse fill="none" stroke="#000000" cx="99" cy="-18" rx="27.8725" ry="18"/><text text-anchor="middle" x="99" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">结束</text></g><!-- C&#45;&gt;结束 --><g id="edge6" class="edge"><title>C&#45;&gt;结束</title><path fill="none" stroke="#000000" d="M99,-71.8314C99,-64.131 99,-54.9743 99,-46.4166"/><polygon fill="#000000" stroke="#000000" points="102.5001,-46.4132 99,-36.4133 95.5001,-46.4133 102.5001,-46.4132"/></g></g></svg></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">e^{x}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7143919999999999em;"></span><span class="strut bottom" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="base"><span class="mord"><span class="mord mathit">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight">x</span></span></span></span></span></span></span></span></span><span class="mord rule" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mord rule" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span></span></p><p><img src="/2018/07/06/test/%E5%AE%9E%E7%8E%B0.png" alt="ls"></p><h4 class="mume-header" id="table-test">table test</h4><table><thead><tr><th>test</th><th>test</th><th>si</th><th>a</th><th>big</th><th>thing</th></tr></thead><tbody><tr><td>test</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>test2</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><pre data-role="codeBlock" data-info="" class="language-"><code>public static void main(String[] args){  System.out.println(&quot;Hello world!&quot;);}</code></pre>      </div>                </body>                              </html>]]></content>
      
      
    </entry>
    
    <entry>
      <title>UML之类图</title>
      <link href="/2018/07/06/UML%E4%B9%8B%E7%B1%BB%E5%9B%BE/"/>
      <url>/2018/07/06/UML%E4%B9%8B%E7%B1%BB%E5%9B%BE/</url>
      <content type="html"><![CDATA[<blockquote><p>限于Git空间有限，就不往博客中插入静态图片了，但是我的微信订阅号【星球码】上是有更加完整的文章。欢迎关注~</p></blockquote><h2 id="UML介绍"><a href="#UML介绍" class="headerlink" title="UML介绍"></a>UML介绍</h2><p>统一建模语言（英语：Unified Modeling Language，缩写 UML）是非专利的第三代建模和规约语言。UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。UML展现了一系列最佳工程实践，这些最佳实践在对大规模，复杂系统进行建模方面，特别是在软件架构层次已经被验证有效。（来自维基百科） UML是在（常见但不限于）数据库设计过程中，在E-R图（实体-联系图）设计后的进一步建模。</p><h3 id="UML图"><a href="#UML图" class="headerlink" title="UML图"></a>UML图</h3><p>用例图、类图（今天主角）、对象图、包图、活动图、状态图、序列图（顺序图）、协作图、构件图、部署图（配置图）</p><blockquote><p>笔者在大三第一学期修了UML课程，当时是第一次接触UML，其中的各种图形，线条搞得有些乱套，好在最后课程大作业设计中，小组连战2天最后利用StarUML软件设计出一个图书管理系统，并利用给出一些简单的GUI。</p></blockquote><h2 id="UML类图线条"><a href="#UML类图线条" class="headerlink" title="UML类图线条"></a>UML类图线条</h2><blockquote><p>说明：类图中方法或属性前会出现+、-、#，该符号分表表示其访问权限是public、private、protected。</p><p>推荐大家使用一款免费的在线制作各种流程图的工具——ProcessOn。包括各种价值链图、过程链图、常规流程图、组织结构图、原型设计等，当然也支持熟悉的UML。（一条五毛~）</p></blockquote><p>线条表示类之间的关系，以下按照类之间关系由强到弱说明，即泛化=实现&gt;组合&gt;聚合&gt;关联&gt;依赖</p><blockquote><p>泛化和实现：子类或实现下面的方法表示增加/复写/实现了哪些方法</p></blockquote><h3 id="泛化"><a href="#泛化" class="headerlink" title="泛化"></a>泛化</h3><p>泛化：实线空白箭头，箭头指向父类，表示继承</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>实现：虚线空白箭头，箭头指向接口。</p><h3 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h3><blockquote><p>通过属性的引用形成组合关系，例如属性集合的引用。</p></blockquote><p>组合：是一种部分对整体的关系，实线，箭头指向部分，实心菱形指向整体。</p><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><blockquote><p>通过属性引用形成的聚合关系，与关联类似，需要视具体场景。</p></blockquote><p>聚合：是群体对个体的关系，空心菱形指向群体，箭头指向其构成的个体。</p><h3 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h3><blockquote><p>通过属性引用形成的关联关系。</p></blockquote><p>关联：表示拥有关系，即has-a关系，箭头指向拥有者；但是如果是双向关联，两个箭头可以省略，即只有一条实线。</p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><blockquote><p>通过方法参数的依赖关系。</p></blockquote><p>依赖：表示一种协助关系，虚线，箭头指向被依赖者。</p><h3 id="欢迎搜索关注微信订阅号：【星球码】"><a href="#欢迎搜索关注微信订阅号：【星球码】" class="headerlink" title="欢迎搜索关注微信订阅号：【星球码】"></a>欢迎搜索关注微信订阅号：【星球码】</h3><p>笔者现在的知识十分有限，文章出现错误在所难免，还请各位能够多多包涵，并不吝指出啊~</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>SecondBlog,ChangeTheme</title>
      <link href="/2018/07/03/SecondBlog-ChangeTheme/"/>
      <url>/2018/07/03/SecondBlog-ChangeTheme/</url>
      <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World~"></a>Hello World~</h1><h2 id="Test-again"><a href="#Test-again" class="headerlink" title="Test again."></a>Test again.</h2>]]></content>
      
      
        <tags>
            
            <tag> theme hello world </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hello,Hexo</title>
      <link href="/2018/07/02/hello-Hexo/"/>
      <url>/2018/07/02/hello-Hexo/</url>
      <content type="html"><![CDATA[<h1 id="Title-test"><a href="#Title-test" class="headerlink" title="Title test."></a>Title test.</h1><h2 id="Second-test"><a href="#Second-test" class="headerlink" title="Second test."></a>Second test.</h2><h3 id="Third-test"><a href="#Third-test" class="headerlink" title="Third test."></a>Third test.</h3><p>使用Hexo+Github部署个人博客还算是一个比较简单的事情！小有成就，哈哈哈！</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/07/02/hello-world/"/>
      <url>/2018/07/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
